{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","match","params","updContact","put","Header","branding","href","About","NotFound","Test","test","fetch","then","response","json","title","body","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.260804d1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [\r\n                    action.payload, ...state.contacts\r\n                ]\r\n            }\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(\r\n                    contact => contact.id === action.payload.id\r\n                        ? (contact = action.payload) : contact\r\n                )\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        this.setState({ contacts: res.data });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n        try {\r\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n            dispatch({ type: 'DELETE_CONTACT', payload: id })\r\n        } catch (e) {\r\n            dispatch({ type: 'DELETE_CONTACT', payload: id })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>{name}\r\n                                <i\r\n                                    onClick={() => this.setState({ showContactInfo: !this.state.showContactInfo })}\r\n                                    className=\"fas fa-sort-down\"\r\n                                    style={{ cursor: 'pointer' }}\r\n                                />\r\n                                <i\r\n                                    className=\"fas fa-times\"\r\n                                    style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                                    onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                                />\r\n                                <Link to={`contact/edit/${id}`}>\r\n                                    <i\r\n                                        className=\"fas fa-pencil-alt\"\r\n                                        style={{\r\n                                            cursor: 'pointer',\r\n                                            float: 'right',\r\n                                            color: 'black',\r\n                                            marginRight: '1rem'\r\n                                        }}\r\n                                    >\r\n                                    </i>\r\n                                </Link>\r\n                            </h4>\r\n                            {showContactInfo ? (\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Email: {email}</li>\r\n                                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                                </ul>\r\n                            ) : null}\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\">\r\n                                    Contact\r\n                                </span> List\r\n                            </h1>\r\n                            {contacts.map(contact => (\r\n                                <Contact\r\n                                    key={contact.id}\r\n                                    contact={contact}\r\n                                />\r\n                            ))}\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input\r\n                type={type}\r\n                name={name}\r\n                className={classnames('form-control form-control-lg', {\r\n                    'is-invalid': error\r\n                })}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    )\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value })\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        // Check For Errors\r\n        if (name === '') {\r\n            this.setState({\r\n                errors: {\r\n                    name: 'Name is required'\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (email === '') {\r\n            this.setState({\r\n                errors: {\r\n                    email: 'Email is required'\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (phone === '') {\r\n            this.setState({\r\n                errors: {\r\n                    phone: 'Phone is required'\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n        dispatch({ type: 'ADD_CONTACT', payload: res.data })\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        })\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Add Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter Email\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter Phone\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        })\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value })\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        // Check For Errors\r\n        if (name === '') {\r\n            this.setState({\r\n                errors: {\r\n                    name: 'Name is required'\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (email === '') {\r\n            this.setState({\r\n                errors: {\r\n                    email: 'Email is required'\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (phone === '') {\r\n            this.setState({\r\n                errors: {\r\n                    phone: 'Phone is required'\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n        dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        })\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Edit Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter Email\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter Phone\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditContact;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst Header = props => {\r\n    const { branding } = props;\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                                <i className=\"fas fa-home\" /> Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\">\r\n                                <i className=\"fas fa-plus\" /> Add\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                                <i className=\"fas fa-question\" /> About\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"display-4\">About Contact Manager</div>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">\r\n                <span className=\"text-danger\">\r\n                    404\r\n                </span> Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page does not exist</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n    state = {\r\n        test: 'test'\r\n    };\r\n\r\n    componentDidMount() {\r\n\r\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n            .then(response => response.json())\r\n            .then(data =>\r\n                this.setState({\r\n                    title: data.title,\r\n                    body: data.body\r\n                }));\r\n    }\r\n\r\n    render() {\r\n        const { title, body } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test;","import { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\n\nimport Header from './components/layout/Header'\n\nimport About from './components/pages/About'\nimport NotFound from './components/pages/NotFound'\n\nimport Test from './components/test/Test'\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}